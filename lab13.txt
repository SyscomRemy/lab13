CRlab13
________________________________________________________________________________________________________________________________________________________________________________________________________

1.

	student@ubuntu:~/lab13$ git clone https://github.com/CircuitCo/BeagleBone

- identifier le boutton poussoir permettant de changer le mode de boot : "boot switch"


A switch is provided to allow switching between the modes.
- Holding the boot switch down during a removal and reapplication of power
without a microSD card inserted will force the boot source to be the USB port and if nothing is detected on the USB client port, it will go to the serial port for download.
- Without holding the switch, the board will boot try to boot from the eMMC. If it is empty, then it will try booting from the microSD slot, followed by the serial port, and then the USB port.
- If you hold the boot switch down during the removal and reapplication of
power to the board, and you have a microSD card inserted with a bootable
image, the board will boot from the microSD card.

- dans la datasheet, le canal d'interruption du Timer0 est le 66 .
( aller dans la section 6-interrupts : ARM Cortex-A8 interrupts et chercher Timer0 )


7. 
	student@ubuntu:~/lab13$ picocom -b 115200 /dev/ttyUSB0
	picocom v2.2

	port is        : /dev/ttyUSB0
	flowcontrol    : none
	baudrate is    : 115200
	parity is      : none
	databits are   : 8
	stopbits are   : 1
	escape is      : C-a
	local echo is  : no
	noinit is      : no
	noreset is     : no
	nolock is      : no
	send_cmd is    : sz -vv
	receive_cmd is : rz -vv -E
	imap is        : 
	omap is        : 
	emap is        : crcrlf,delbs,

	Type [C-a] [C-h] to see available commands

	Terminal ready

  reboot
  picocom -b 115200 /dev/ttyUSB0

	U-Boot SPL 2016.01-00001-g4eb802e (Jan 13 2016 - 11:14:31)
	Trying to boot from MMC
	bad magic


8. reset de la carte pour que ça marche ( celle ci garde la dernière instruction, appui sur boot switch donc boot de la carte SD (MMC)):

	U-Boot 2016.01-00001-g4eb802e (Jan 13 2016 - 11:14:31 -0600), Build: jenkins-github_Bootloader-Builder-313

	       Watchdog enabled
	I2C:   ready
	DRAM:  51
	U-Boot SPL 2018.05 (Dec 01 2020 - 11:15:28 -0100)
	Trying to boot from MMC1
	Loading Environment from FAT... *** Warning - bad CRC, using default environment

	Failed (-5)
	Loading Environment from MMC... OK


9. 
	BARDIAU_ITOUDJ-uboot=> hel saveenv
	saveenv - save environment variables to persistent storage

	Usage:
	saveenv 

10.  Pour  éviter  tout  problème  en  raison  de  paramètres  appliqués  lors  de  précédents  travaux pratiques, il est conseillé d'effacer les  variables d'environnement U-Boot:

	BARDIAU_ITOUDJ-uboot=> env default -f -a
	## Resetting to default environment
	BARDIAU_ITOUDJ-uboot=> saveenv
	Saving Environment to MMC... Writing to redundant MMC(1)... OK

11.Configuration réseau sur la carte cible Beagle Board

	BARDIAU_ITOUDJ-uboot=> setenv ipaddr 192.168.0.100
	BARDIAU_ITOUDJ-uboot=> setenv serverip 192.168.0.1
	BARDIAU_ITOUDJ-uboot=> setenv ethaddr 12:34:56:ab:cd:ef
	BARDIAU_ITOUDJ-uboot=> setenv autostart no

12. Enregistrer ces paramètres sur le stockage eMMC sur le tableau

	BARDIAU_ITOUDJ-uboot=> saveenv
	Saving Environment to MMC... Writing to MMC(1)... OK


13.  Configuration  du  réseau  sur  l'hôte  du  PC.  Brancher  votre  adaptateur  Ethernet  sur  le  PC  et brancher un cable ethernet reliant la carte au PC. 

14. Vérifiez l’interface ethernet est bien connecter sur la machine virtuelle et non pas sur windows. 

15. Trouvez le nom de cette interface en tapant:ifconfig -a
student@ubuntu:~$ ifconfig -a
ens33: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.25.132  netmask 255.255.255.0  broadcast 192.168.25.255
        inet6 fe80::431c:f262:7eed:281b  prefixlen 64  scopeid 0x20<link>
        ether 00:0c:29:89:65:7f  txqueuelen 1000  (Ethernet)
        RX packets 1464  bytes 1579172 (1.5 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 705  bytes 73585 (73.5 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

enxa0cec8300217: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet6 fe80::3412:5420:4aa2:cf05  prefixlen 64  scopeid 0x20<link>
        ether a0:ce:c8:30:02:17  txqueuelen 1000  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 17  bytes 2832 (2.8 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 816  bytes 62987 (62.9 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 816  bytes 62987 (62.9 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

- on en déduit que : 

ether a0:ce:c8:30:02:17  txqueuelen 1000  (Ethernet) - USB ethernet (notre câble pour la cable)

ether 00:0c:29:89:65:7f  txqueuelen 1000  (Ethernet) - PCI ethernet (pour internet)

16. dans notre cas, le nom de l'interface est : ens33

aller dans wire settings, chercher paramètres USB ethernet  -> aller dans IPv4 -> sélectionner MANUAL -> adress 92.168.0.1 -> Net mask : 255.255.255.0


17. Redémarrer l’interface ethernet

	student@ubuntu:~$ sudo /etc/init.d/networking restart
	[sudo] password for student: 
	[ ok ] Restarting networking (via systemctl): networking.service.


18. Test de la connexion réseau
a.student@ubuntu:~$ sudo apt install tftpd-hpa
b.




